openapi: 3.1.0
info:
  title: Song Manage System API
  version: 1.0.0
  description: >-
    后端接口基于 Next.js App Router 实现，文档可导入 Apifox 调试。
servers:
  - url: http://localhost:3000
    description: 本地开发环境
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: auth_token
  schemas:
    Pagination:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        total:
          type: integer
        totalPages:
          type: integer
    ApiError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: string
              nullable: true
    AuthUser:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        username:
          type: string
        name:
          type: string
          nullable: true
        avatar:
          type: string
          format: uri
          nullable: true
        role:
          type: string
          enum: [ADMIN, MANAGER, USER]
    Artist:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        avatar:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Album:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        cover:
          type: string
          format: uri
          nullable: true
        releaseDate:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          nullable: true
        artistId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        artist:
          $ref: '#/components/schemas/Artist'
        songs:
          type: array
          items:
            $ref: '#/components/schemas/Song'
          nullable: true
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Song:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        duration:
          type: integer
          nullable: true
        fileUrl:
          type: string
          format: uri
          nullable: true
        cover:
          type: string
          format: uri
          nullable: true
        lyrics:
          type: string
          nullable: true
        artistId:
          type: integer
        albumId:
          type: integer
          nullable: true
        trackNumber:
          type: integer
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        artist:
          $ref: '#/components/schemas/Artist'
        album:
          $ref: '#/components/schemas/Album'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PlaylistSong:
      type: object
      properties:
        id:
          type: integer
        playlistId:
          type: integer
        songId:
          type: integer
        order:
          type: integer
        addedAt:
          type: string
          format: date-time
        song:
          $ref: '#/components/schemas/Song'
    Playlist:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        cover:
          type: string
          format: uri
          nullable: true
        isPublic:
          type: boolean
        userId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/AuthUser'
        playlistSongs:
          type: array
          items:
            $ref: '#/components/schemas/PlaylistSong'
paths:
  /api/auth/register:
    post:
      summary: 用户注册
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, username, password]
              properties:
                email:
                  type: string
                  format: email
                username:
                  type: string
                password:
                  type: string
                name:
                  type: string
                avatar:
                  type: string
                  format: uri
      responses:
        '201':
          description: 注册成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AuthUser'
        '409':
          description: 邮箱或用户名重复
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/auth/login:
    post:
      summary: 用户登录
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [identifier, password]
              properties:
                identifier:
                  type: string
                  description: 邮箱或用户名
                password:
                  type: string
      responses:
        '200':
          description: 登录成功
          headers:
            Set-Cookie:
              schema:
                type: string
              description: 返回 HttpOnly JWT Cookie
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AuthUser'
        '401':
          description: 账号或密码错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/auth/logout:
    post:
      summary: 退出登录
      tags: [Auth]
      responses:
        '200':
          description: 退出成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message:
                        type: string
  /api/admin/artists:
    get:
      summary: 艺术家列表
      tags: [Admin]
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      responses:
        '200':
          description: 列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Pagination'
                      - type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/Artist'
    post:
      summary: 创建艺术家
      tags: [Admin]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                avatar:
                  type: string
                  format: uri
                description:
                  type: string
                country:
                  type: string
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Artist'
  /api/admin/artists/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: 艺术家详情
      tags: [Admin]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 详情
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Artist'
    put:
      summary: 更新艺术家
      tags: [Admin]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                avatar:
                  type: string
                  format: uri
                description:
                  type: string
                country:
                  type: string
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Artist'
    delete:
      summary: 删除艺术家
      tags: [Admin]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message:
                        type: string
  /api/admin/albums:
    get:
      summary: 专辑列表
      tags: [Admin]
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: artistId
          schema:
            type: integer
      responses:
        '200':
          description: 列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Pagination'
                      - type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/Album'
    post:
      summary: 创建专辑
      tags: [Admin]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, artistId]
              properties:
                title:
                  type: string
                cover:
                  type: string
                  format: uri
                releaseDate:
                  type: string
                  format: date-time
                description:
                  type: string
                artistId:
                  type: integer
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Album'
  /api/admin/albums/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: 专辑详情
      tags: [Admin]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 详情
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Album'
    put:
      summary: 更新专辑
      tags: [Admin]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                cover:
                  type: string
                  format: uri
                releaseDate:
                  type: string
                  format: date-time
                description:
                  type: string
                artistId:
                  type: integer
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Album'
    delete:
      summary: 删除专辑
      tags: [Admin]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      message:
                        type: string
  /api/admin/categories:
    get:
      summary: 分类列表
      tags: [Admin]
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      responses:
        '200':
          description: 列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Pagination'
                      - type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/Category'
    post:
      summary: 创建分类
      tags: [Admin]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                description:
                  type: string
                color:
                  type: string
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Category'
  /api/admin/categories/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: 分类详情
      tags: [Admin]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 详情
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Category'
    put:
      summary: 更新分类
      tags: [Admin]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                color:
                  type: string
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Category'
    delete:
      summary: 删除分类
      tags: [Admin]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      message:
                        type: string
  /api/admin/songs:
    get:
      summary: 歌曲列表
      tags: [Admin]
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: artistId
          schema:
            type: integer
        - in: query
          name: albumId
          schema:
            type: integer
        - in: query
          name: categoryId
          schema:
            type: integer
      responses:
        '200':
          description: 列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Pagination'
                      - type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/Song'
    post:
      summary: 创建歌曲
      tags: [Admin]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, artistId]
              properties:
                title:
                  type: string
                duration:
                  type: integer
                fileUrl:
                  type: string
                  format: uri
                cover:
                  type: string
                  format: uri
                lyrics:
                  type: string
                artistId:
                  type: integer
                albumId:
                  type: integer
                categoryIds:
                  type: array
                  items:
                    type: integer
                trackNumber:
                  type: integer
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Song'
  /api/admin/songs/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: 歌曲详情
      tags: [Admin]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 详情
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Song'
    put:
      summary: 更新歌曲
      tags: [Admin]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                duration:
                  type: integer
                fileUrl:
                  type: string
                  format: uri
                cover:
                  type: string
                  format: uri
                lyrics:
                  type: string
                artistId:
                  type: integer
                albumId:
                  type: integer
                  nullable: true
                categoryIds:
                  type: array
                  items:
                    type: integer
                trackNumber:
                  type: integer
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Song'
    delete:
      summary: 删除歌曲
      tags: [Admin]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      message:
                        type: string
  /api/users/me:
    get:
      summary: 获取个人信息
      tags: [User]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 当前用户
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/AuthUser'
    put:
      summary: 更新个人资料
      tags: [User]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                avatar:
                  type: string
                  format: uri
      responses:
        '200':
          description: 更新完成
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/AuthUser'
  /api/playlists:
    get:
      summary: 公开歌单列表
      tags: [Playlist]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      responses:
        '200':
          description: 列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Pagination'
                      - type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/Playlist'
    post:
      summary: 创建歌单
      tags: [Playlist]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                description:
                  type: string
                cover:
                  type: string
                  format: uri
                isPublic:
                  type: boolean
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Playlist'
  /api/playlists/my:
    get:
      summary: 我的歌单
      tags: [Playlist]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Playlist'
  /api/playlists/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: 歌单详情
      tags: [Playlist]
      responses:
        '200':
          description: 详情
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Playlist'
                      - type: object
                        properties:
                          isOwner:
                            type: boolean
    put:
      summary: 更新歌单
      tags: [Playlist]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                cover:
                  type: string
                  format: uri
                isPublic:
                  type: boolean
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Playlist'
    delete:
      summary: 删除歌单
      tags: [Playlist]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      message:
                        type: string
  /api/playlists/{id}/songs:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      summary: 歌单添加歌曲
      tags: [Playlist]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [songId]
              properties:
                songId:
                  type: integer
                order:
                  type: integer
      responses:
        '201':
          description: 添加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/PlaylistSong'
  /api/playlists/{id}/songs/{songId}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      - in: path
        name: songId
        required: true
        schema:
          type: integer
    delete:
      summary: 歌单移除歌曲
      tags: [Playlist]
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 移除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      message:
                        type: string
